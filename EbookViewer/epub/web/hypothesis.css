@charset "UTF-8";
/* Make the wrapper element's size match the contained `svg` element  */
.SvgIcon {
  display: flex;
}
.SvgIcon--inline {
  display: inline;
}

/**
 * Add stylized focus to interactive elements such <input> or <textarea>
 *
 * @param {boolean} $inset -
 *   The focus style is implemented with a box-shadow and this parameter determines whether
 *   the box-shadow should be inset on the element. Set this to true when the element
 *   may be adjacent to another in order to prevent part of the outline from being obscured.
 */
/**
 * Display an outline on an element only when it has keyboard focus.
 *
 * This requires the browser to support the :focus-visible pseudo-selector [1]
 * or for the JS polyfill [2] to be loaded.
 *
 * [1] https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
 * [2] https://github.com/WICG/focus-visible
 *
 * @param {boolean} $inset - Does the outline render inset or not
 */
.LabeledButton {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  color: #595959;
  background-color: #f2f2f2;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
  border-radius: 2px;
  border: none;
  padding: 0.5em;
  font-size: 1em;
  font-weight: 700;
  white-space: nowrap;
  display: flex;
  justify-content: center;
  align-items: center;
}
.LabeledButton:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.LabeledButton:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.LabeledButton:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.LabeledButton:disabled {
  color: #595959;
}
.LabeledButton[aria-expanded=true], .LabeledButton[aria-pressed=true] {
  color: #202020;
}
.LabeledButton[aria-expanded=true]:hover:not([disabled]), .LabeledButton[aria-pressed=true]:hover:not([disabled]) {
  color: #202020;
}
.LabeledButton[aria-expanded=true]:focus:not([disabled]), .LabeledButton[aria-pressed=true]:focus:not([disabled]) {
  color: #202020;
}
.LabeledButton:hover:not([disabled]) {
  color: #202020;
  background-color: #ececec;
}
.LabeledButton--small {
  padding: 0.25em;
}
.LabeledButton--large {
  padding: 0.75em;
}
.LabeledButton--icon-left svg {
  margin-right: 0.5em;
}
.LabeledButton--icon-right svg {
  margin-left: 0.5em;
}
.LabeledButton svg {
  width: 1.25em;
  height: 1.25em;
}
.LabeledButton--light {
  color: #595959;
  background-color: #f2f2f2;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.LabeledButton--light:disabled {
  color: #595959;
}
.LabeledButton--light[aria-expanded=true], .LabeledButton--light[aria-pressed=true] {
  color: #202020;
}
.LabeledButton--light[aria-expanded=true]:hover:not([disabled]), .LabeledButton--light[aria-pressed=true]:hover:not([disabled]) {
  color: #202020;
}
.LabeledButton--light[aria-expanded=true]:focus:not([disabled]), .LabeledButton--light[aria-pressed=true]:focus:not([disabled]) {
  color: #202020;
}
.LabeledButton--light:hover:not([disabled]) {
  color: #202020;
  background-color: #ececec;
}
.LabeledButton--primary {
  color: #f2f2f2;
  background-color: #595959;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.LabeledButton--primary:disabled {
  color: #a6a6a6;
}
.LabeledButton--primary[aria-expanded=true], .LabeledButton--primary[aria-pressed=true] {
  color: #f2f2f2;
}
.LabeledButton--primary[aria-expanded=true]:hover:not([disabled]), .LabeledButton--primary[aria-pressed=true]:hover:not([disabled]) {
  color: #f2f2f2;
}
.LabeledButton--primary[aria-expanded=true]:focus:not([disabled]), .LabeledButton--primary[aria-pressed=true]:focus:not([disabled]) {
  color: #f2f2f2;
}
.LabeledButton--primary:hover:not([disabled]) {
  color: #f2f2f2;
  background-color: #3f3f3f;
}
.LabeledButton--dark {
  color: #595959;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.LabeledButton--dark:disabled {
  color: #595959;
}
.LabeledButton--dark[aria-expanded=true], .LabeledButton--dark[aria-pressed=true] {
  color: #595959;
  background-color: #dbdbdb;
}
.LabeledButton--dark[aria-expanded=true]:hover:not([disabled]), .LabeledButton--dark[aria-pressed=true]:hover:not([disabled]) {
  color: #202020;
}
.LabeledButton--dark[aria-expanded=true]:focus:not([disabled]), .LabeledButton--dark[aria-pressed=true]:focus:not([disabled]) {
  color: #595959;
}
.LabeledButton--dark:hover:not([disabled]) {
  color: #202020;
  background-color: #dbdbdb;
}

.IconButton {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  color: #595959;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
  border-radius: 2px;
  border: none;
  padding: 0.5em;
  font-size: 1em;
  font-weight: 700;
  white-space: nowrap;
  display: flex;
  justify-content: center;
  align-items: center;
}
.IconButton:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.IconButton:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.IconButton:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.IconButton:disabled {
  color: #595959;
}
.IconButton[aria-expanded=true], .IconButton[aria-pressed=true] {
  color: #bd1c2b;
}
.IconButton[aria-expanded=true]:hover:not([disabled]), .IconButton[aria-pressed=true]:hover:not([disabled]) {
  color: #202020;
}
.IconButton[aria-expanded=true]:focus:not([disabled]), .IconButton[aria-pressed=true]:focus:not([disabled]) {
  color: #bd1c2b;
}
.IconButton:hover:not([disabled]) {
  color: #202020;
  background-color: transparent;
}
.IconButton--small {
  padding: 0.25em;
}
.IconButton--large {
  padding: 0.75em;
}
.IconButton svg {
  width: 1em;
  height: 1em;
}
.IconButton--light {
  color: #9c9c9c;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.IconButton--light:disabled {
  color: #9c9c9c;
}
.IconButton--light[aria-expanded=true], .IconButton--light[aria-pressed=true] {
  color: #9c9c9c;
}
.IconButton--light[aria-expanded=true]:hover:not([disabled]), .IconButton--light[aria-pressed=true]:hover:not([disabled]) {
  color: #3f3f3f;
}
.IconButton--light[aria-expanded=true]:focus:not([disabled]), .IconButton--light[aria-pressed=true]:focus:not([disabled]) {
  color: #9c9c9c;
}
.IconButton--light:hover:not([disabled]) {
  color: #3f3f3f;
  background-color: transparent;
}
.IconButton--primary {
  color: #bd1c2b;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.IconButton--primary:disabled {
  color: #595959;
}
.IconButton--primary[aria-expanded=true], .IconButton--primary[aria-pressed=true] {
  color: #bd1c2b;
}
.IconButton--primary[aria-expanded=true]:hover:not([disabled]), .IconButton--primary[aria-pressed=true]:hover:not([disabled]) {
  color: #bd1c2b;
}
.IconButton--primary[aria-expanded=true]:focus:not([disabled]), .IconButton--primary[aria-pressed=true]:focus:not([disabled]) {
  color: #bd1c2b;
}
.IconButton--primary:hover:not([disabled]) {
  color: #bd1c2b;
  background-color: transparent;
}
.IconButton--dark {
  color: #595959;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.IconButton--dark:disabled {
  color: #595959;
}
.IconButton--dark[aria-expanded=true], .IconButton--dark[aria-pressed=true] {
  color: #bd1c2b;
}
.IconButton--dark[aria-expanded=true]:hover:not([disabled]), .IconButton--dark[aria-pressed=true]:hover:not([disabled]) {
  color: #202020;
}
.IconButton--dark[aria-expanded=true]:focus:not([disabled]), .IconButton--dark[aria-pressed=true]:focus:not([disabled]) {
  color: #bd1c2b;
}
.IconButton--dark:hover:not([disabled]) {
  color: #202020;
  background-color: transparent;
}
@media (pointer: coarse) {
  .IconButton--medium, .IconButton--large {
    min-width: 44px;
    min-height: 44px;
  }
}

.LinkButton {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  color: #595959;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
  border-radius: 2px;
  border: none;
  padding: 0.5em;
  font-size: 1em;
  font-weight: 700;
  white-space: nowrap;
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: 400;
  padding: 0;
}
.LinkButton:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.LinkButton:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.LinkButton:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.LinkButton:disabled {
  color: #595959;
}
.LinkButton[aria-expanded=true], .LinkButton[aria-pressed=true] {
  color: #202020;
}
.LinkButton[aria-expanded=true]:hover:not([disabled]), .LinkButton[aria-pressed=true]:hover:not([disabled]) {
  color: #84141e;
}
.LinkButton[aria-expanded=true]:focus:not([disabled]), .LinkButton[aria-pressed=true]:focus:not([disabled]) {
  color: #202020;
}
.LinkButton:hover:not([disabled]) {
  color: #84141e;
  background-color: transparent;
}
.LinkButton--small {
  padding: 0.25em;
}
.LinkButton--large {
  padding: 0.75em;
}
.LinkButton svg {
  width: 1em;
  height: 1em;
}
.LinkButton--light {
  color: #595959;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.LinkButton--light:disabled {
  color: #595959;
}
.LinkButton--light[aria-expanded=true], .LinkButton--light[aria-pressed=true] {
  color: #202020;
}
.LinkButton--light[aria-expanded=true]:hover:not([disabled]), .LinkButton--light[aria-pressed=true]:hover:not([disabled]) {
  color: #84141e;
}
.LinkButton--light[aria-expanded=true]:focus:not([disabled]), .LinkButton--light[aria-pressed=true]:focus:not([disabled]) {
  color: #202020;
}
.LinkButton--light:hover:not([disabled]) {
  color: #84141e;
  background-color: transparent;
}
.LinkButton--primary {
  color: #bd1c2b;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.LinkButton--primary:disabled {
  color: #595959;
}
.LinkButton--primary[aria-expanded=true], .LinkButton--primary[aria-pressed=true] {
  color: #bd1c2b;
}
.LinkButton--primary[aria-expanded=true]:hover:not([disabled]), .LinkButton--primary[aria-pressed=true]:hover:not([disabled]) {
  color: #bd1c2b;
}
.LinkButton--primary[aria-expanded=true]:focus:not([disabled]), .LinkButton--primary[aria-pressed=true]:focus:not([disabled]) {
  color: #bd1c2b;
}
.LinkButton--primary:hover:not([disabled]) {
  color: #bd1c2b;
  background-color: transparent;
}
.LinkButton--dark {
  color: #202020;
  background-color: transparent;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
}
.LinkButton--dark:disabled {
  color: #595959;
}
.LinkButton--dark[aria-expanded=true], .LinkButton--dark[aria-pressed=true] {
  color: #202020;
}
.LinkButton--dark[aria-expanded=true]:hover:not([disabled]), .LinkButton--dark[aria-pressed=true]:hover:not([disabled]) {
  color: #84141e;
}
.LinkButton--dark[aria-expanded=true]:focus:not([disabled]), .LinkButton--dark[aria-pressed=true]:focus:not([disabled]) {
  color: #202020;
}
.LinkButton--dark:hover:not([disabled]) {
  color: #84141e;
  background-color: transparent;
}
.LinkButton:hover:not([disabled]) {
  text-decoration: underline;
}
.LinkButton--primary {
  font-weight: 500;
}

.Dialog__container {
  display: flex;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.Dialog__background {
  background-color: black;
  bottom: 0;
  left: 0;
  opacity: 0.5;
  position: fixed;
  right: 0;
  top: 0;
}

.Dialog__content {
  display: flex;
  flex-direction: column;
  max-height: 90vh;
  max-width: 700px;
  max-width: min(700px, 90vw);
  background-color: white;
  border-radius: 3px;
  margin: auto;
  padding: 20px;
}
.Dialog__content:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.Dialog__content:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.Dialog__content:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.Dialog__title {
  display: flex;
  align-items: center;
  font-size: 19px;
}

.Dialog__cancel-btn {
  border: 0;
  background: none;
  color: #3f3f3f;
  font-size: 19px;
  padding: 5px;
  margin: -10px 0px;
}
.Dialog__cancel-btn:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.Dialog__cancel-btn:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.Dialog__cancel-btn:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.Dialog__cancel-btn:hover {
  cursor: pointer;
  color: #bd1c2b;
}

.Dialog__actions {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  margin-top: 10px;
}
.Dialog__actions > *:not(:first-child) {
  margin-left: 5px;
}

/**
 * Abstract mixin for establishing basic flex container. External users should
 * use `row` or `column` as needed. Default values here reflect default CSS
 * values for flex rules.
 *
 * @param {string} $direction [row] - value for flex-direction (row or column).
 * @param {string} $justify [flex-start] - How to align contents on main axis.
 *                                    Accepts and maps special value of 'right'
 *                                   (roughly analogous to horizontal alignment)
 * @param {string} $align [stretch] - How to align contents on cross axis.
 *                                    (roughly analogous to vertical alignment)
 */
/**
 * Establish a column (flex-direction: column) flex container.
 *
 * @param {string} $justify [flex-start] - How to justify flex contents
 * @param {string} $align [stretch] - How to align flex contents
 */
/**
 * Establish a row (flex-direction: column) flex container.
 *
 * @param {string} $justify [flex-start] - How to justify flex contents
 * @param {string} $align [stretch] - How to align flex contents
 */
/**
 * Establish a horizontal (margin) rhythm for this element's immediate
 * children (i.e. put equal space between children).
 *
 * This mixin uses `!important` such that it can compete with specificity
 * of reset rules that set some of our element's margins to 0. That allows
 * these rules—which are applied to a parent element—to be able to assert
 * margins, as it should be able to do.
 *
 * @param $size [5px] - Size of horizontal margin between child elements
 */
/**
 * Establish a vertical (margin) rhythm for this element's immediate
 * children (i.e. put equal space between children).
 *
 * This mixin uses `!important` such that it can compete with specificity
 * of reset rules that set some of our element's margins to 0. That allows
 * these rules—which are applied to a parent element—to be able to assert
 * margins, as it should be able to do.
 *
 * @param $size [var.$layout-space--medium]: Spacing size (padding)
 * @FIXME Find workaround for SvgIcon exception
 */
/**
 * Establish vertical space outside of elements within the container
 *
 * @param $size [var.$layout-space--medium]: Spacing size (padding)
 */
/**
 * Establish horizontal space outside of elements within the container
 *
 * @param $size [var.$layout-space--medium]: Spacing size (padding)
 */
/**
 * Button mixins for use by the `Button` component or any component that wishes
 * to override default `Button`-component styling. These mixins are meant to be
 * applied to `<button>` HTML elements, with an optional contained icon
 * (i.e. `SvgIcon` component or `<svg>` element).
 *
 * To customize default `Button` styling, start with an appropriate button mixin
 * and extend or or override rules as necessary in your component's SCSS module.
 *
 * e.g., let's pretend you wish the `Button` used in `MyComponent`
 * to have a pink background. In `my-component.scss`, you might do something like:
 *
 * .my-component-button {
 *    @include button--labeled;
 *    background-color: pink;
 * }
 *
 * And pass 'my-component-button' as the `className` prop to `Button`.
 */
/**
 * Basic color, sizing, padding and hover for buttons.
 */
/*
 * A button with an icon and no displayed text.
 *
 * @param {boolean} [$with-active-state] - Adds an active state color when pressed / expanded
 * @param {boolean} [$coarse-min-size] - Overrides the minimum height and width in mobile view.
 */
/**
 * A button with displayed text. It may or may not have an icon. The default
 * colors assume the button is displayed on a white background.
 *
 * @param {CSSColor} [$background-color] - The button's background color when
 *   neither hovered nor active.
 * @param {CSSColor} [$active-background-color]
 */
/**
 * A labeled button that is a primary action.
 */
/**
 * An icon-only button that sits to the right of a text-input field
 * (e.g. "copy to clipboard" button in share panels)
 *
 * @param {boolean} [$compact] - Tighten padding for small spaces
 */
/**
 * A button that is styled roughly like an `<a>` element (link-like)
 */
/**
 * A button pattern that looks like a link with a small icon on the right
 * Used, e.g., in the help panel to navigate between sub-panels
 */
/**
 * Mixins that style buttons to appear as lozenges with an integrated arrow
 * pointing left, up or down (right doesn't exist yet but could easily be added).
 * These indicators are used, e.g., in the bucket bar.
 *
 * These button or button-like elements consist of styles applied to the
 * element itself, which create a rounded-rectangle lozenge with small-sized
 * label text, as well as composited ::before and ::after pseudo-elements to
 * create an arrow-pointer effect.
 *
 * The arrow-points are created by the combination of borders and positioning.
 * See https://css-tricks.com/snippets/css/css-triangle/ for a few examples
 *
 */
/**
 * A straightforward "frame" that serves as a basis for other card-like
 * patterns. May be used on its own for components that don't need all of
 * `card` or `panel's` bells and whistles.
 */
/**
 * A "card"-like pattern that may be displayed in vertical lists, a la
 * annotation (thread) cards. Will vertically-space its children. Adds a
 * hover/active intensified box shadow and accounts for "theme-clean" affordances.
 */
/**
 * horizontally-oriented collection of linked icons
 */
/**
 * A pattern for styling a little "pointer" (arrow) icon that attaches to
 * menu content and serves as a visual anchor back to the triggering
 * button/element. When using, you'll need to provide the appropriate
 * positioning details to get the pointer to be where you want it in the
 * given menu.
 *
 * @param {string} [$direction] - Which direction the arrow should "point"
 */
/**
 * A pattern for displaying redacted (moderated) text content
 */
/**
 * Represent quoted text, as in an excerpt, with a hover or focused state.
 */
/**
 * Base styles for a "panel"-like element, with appropriate
 * padding, heading and close-button styles.
 *
 * @param {length} [$rhythm] - An optional value to use for vertical rhythm
 *   (spacing, vertically)
 */
/**
 * `panel` with tighter margins and padding, for use in more confined spaces
 */
/**
 * Styled external-linked "tabs" with icons, intended for use in a panel
 */
/**
 * A full-width banner with optional "type" and styled icon at left
 */
/**
 * A variant of `banner` for use as a toast message container. Narrower,
 * lighter border, more padding around message text.
 */
.AdderToolbar {
  all: initial;
  border: 1px solid #dbdbdb;
  position: absolute;
  box-sizing: border-box;
  direction: ltr;
  background: #fff;
  border-radius: 4px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.25);
  opacity: 0.05;
  animation-duration: 80ms;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;
}
.AdderToolbar--down.is-active {
  animation-name: adder-fade-in, adder-pop-down;
}
.AdderToolbar--up.is-active {
  animation-name: adder-fade-in, adder-pop-up;
}

.AdderToolbar__arrow {
  position: absolute;
  z-index: 2;
  color: #dbdbdb;
  fill: #fff;
  left: 50%;
}
.AdderToolbar__arrow--down {
  transform: rotateX(180deg) translateX(-50%) translateY(1px);
}
.AdderToolbar__arrow--up {
  top: 0;
  transform: translate(-50%, -100%);
}

.AdderToolbar__actions {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: stretch;
}

.AdderToolbar__button {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  cursor: pointer;
  color: #595959;
  font-size: 12px;
  line-height: 1em;
  padding: 0.75em;
  transition: color 80ms;
}
.AdderToolbar__button:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.AdderToolbar__button:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.AdderToolbar__button:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}

.AdderToolbar__label {
  margin-top: 0.25em;
  transition: color 80ms;
}

.AdderToolbar__badge {
  background-color: #595959;
  border-radius: 4px;
  color: #f2f2f2;
  font-weight: bold;
  padding: 2px 4px;
}

.AdderToolbar__separator {
  margin: 0.25em;
  border-right: 1px solid #dbdbdb;
  border-color: #a6a6a6;
}

.AdderToolbar__actions:hover .AdderToolbar__button:not(:hover) {
  color: #9c9c9c;
}
.AdderToolbar__actions:hover .AdderToolbar__button:not(:hover) .AdderToolbar__badge {
  background-color: #9c9c9c;
}

@keyframes adder-fade-in {
  0% {
    opacity: 0.05;
  }
  20% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}
@keyframes adder-pop-up {
  from {
    transform: scale(0.8) translateY(10px);
  }
  to {
    transform: scale(1) translateY(0px);
  }
}
@keyframes adder-pop-down {
  from {
    transform: scale(0.8) translateY(-10px);
  }
  to {
    transform: scale(1) translateY(0px);
  }
}
.annotator-frame .Buckets__list {
  background: #ececec;
  pointer-events: none;
  position: absolute;
  height: 100%;
  width: 23px;
  left: -22px;
}
.annotator-frame.annotator-collapsed .Buckets__list {
  background: rgba(0, 0, 0, 0.08);
}
.annotator-frame .Buckets__bucket {
  position: absolute;
  right: 0;
}
.annotator-frame .Buckets__button {
  pointer-events: all;
}
.annotator-frame .Buckets__button--left {
  margin-top: -8px;
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  border: 1px solid #dbdbdb;
  position: absolute;
  right: 0;
  background-color: #fff;
  width: 26px;
  height: 16px;
  text-align: center;
  color: #737373;
  font-weight: bold;
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 10px;
  line-height: 1;
  border-radius: 2px 4px 4px 2px;
}
.annotator-frame .Buckets__button--left:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.annotator-frame .Buckets__button--left:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Buckets__button--left:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Buckets__button--left::before, .annotator-frame .Buckets__button--left::after {
  content: "";
  position: absolute;
  border: inset transparent;
}
.annotator-frame .Buckets__button--left::before, .annotator-frame .Buckets__button--left::after {
  right: 100%;
  top: 50%;
}
.annotator-frame .Buckets__button--left::before {
  border-width: 8px;
  border-right: 5px solid #dbdbdb;
  margin-top: -8px;
}
.annotator-frame .Buckets__button--left::after {
  border-width: 7px;
  border-right: 4px solid #fff;
  margin-top: -7px;
}
.annotator-frame .Buckets__button--up {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  border: 1px solid #dbdbdb;
  position: absolute;
  right: 0;
  background-color: #fff;
  width: 26px;
  height: 16px;
  text-align: center;
  color: #737373;
  font-weight: bold;
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 10px;
  line-height: 1;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  z-index: 1;
  border-radius: 2px 2px 4px 4px;
  margin-top: -11px;
}
.annotator-frame .Buckets__button--up:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.annotator-frame .Buckets__button--up:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Buckets__button--up:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Buckets__button--up::before, .annotator-frame .Buckets__button--up::after {
  content: "";
  position: absolute;
  border: inset transparent;
}
.annotator-frame .Buckets__button--up::before, .annotator-frame .Buckets__button--up::after {
  left: 50%;
}
.annotator-frame .Buckets__button--up::before, .annotator-frame .Buckets__button--up::after {
  top: auto;
  bottom: 100%;
}
.annotator-frame .Buckets__button--up::before {
  border-width: 13px;
  border-bottom: 6px solid #dbdbdb;
  margin-left: -13px;
}
.annotator-frame .Buckets__button--up::after {
  border-width: 12px;
  border-bottom: 5px solid #fff;
  margin-left: -12px;
}
.annotator-frame .Buckets__button--down {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  border: 1px solid #dbdbdb;
  position: absolute;
  right: 0;
  background-color: #fff;
  width: 26px;
  height: 16px;
  text-align: center;
  color: #737373;
  font-weight: bold;
  font-family: "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-size: 10px;
  line-height: 1;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  z-index: 1;
  margin-top: 0;
  border-radius: 4px 4px 2px 2px;
}
.annotator-frame .Buckets__button--down:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.annotator-frame .Buckets__button--down:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Buckets__button--down:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Buckets__button--down::before, .annotator-frame .Buckets__button--down::after {
  content: "";
  position: absolute;
  border: inset transparent;
}
.annotator-frame .Buckets__button--down::before, .annotator-frame .Buckets__button--down::after {
  left: 50%;
}
.annotator-frame .Buckets__button--down::before, .annotator-frame .Buckets__button--down::after {
  top: 100%;
}
.annotator-frame .Buckets__button--down::before {
  border-width: 13px;
  border-top: 6px solid #dbdbdb;
  margin-left: -13px;
}
.annotator-frame .Buckets__button--down::after {
  border-width: 12px;
  border-top: 5px solid #fff;
  margin-left: -12px;
}

.annotator-frame {
  /** Visible with clean theme */
}
.annotator-frame .Toolbar {
  position: absolute;
  left: -33px;
  width: 33px;
  z-index: 2;
}
@media (pointer: coarse) {
  .annotator-frame .Toolbar {
    left: -32px;
    width: 32px;
  }
}
.annotator-frame .Toolbar__buttonbar {
  margin-top: 0.75em;
}
.annotator-frame .Toolbar__buttonbar > * + *:not([class*=SvgIcon--inline]) {
  margin-top: 5px !important;
}
.annotator-frame .Toolbar__button {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 0.5em;
  border-radius: 2px;
  border: none;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
  color: #595959;
  color: #737373;
  background: #fff;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  border: 1px solid #dbdbdb;
  border-radius: 4px;
}
.annotator-frame .Toolbar__button:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.annotator-frame .Toolbar__button:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Toolbar__button:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Toolbar__button svg {
  width: 16px;
  height: 16px;
}
.annotator-frame .Toolbar__button:hover:not([disabled]), .annotator-frame .Toolbar__button:focus:not([disabled]) {
  color: #202020;
}
@media (pointer: coarse) {
  .annotator-frame .Toolbar__button {
    min-width: 44px;
    min-height: 44px;
  }
}
@media (pointer: coarse) {
  .annotator-frame .Toolbar__button {
    min-width: 32px;
    min-height: 32px;
  }
}
.annotator-frame .Toolbar__sidebar-toggle {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 0.5em;
  border-radius: 2px;
  border: none;
  transition: color 0.2s ease-out, background-color 0.2s ease-out, opacity 0.2s ease-out;
  color: #595959;
  color: #737373;
  background: #fff;
  border-left: 1px solid #dbdbdb;
  border-bottom: 1px solid #dbdbdb;
  padding-left: 2px;
  width: 33px;
  height: 40px;
  color: #9c9c9c;
}
.annotator-frame .Toolbar__sidebar-toggle:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.annotator-frame .Toolbar__sidebar-toggle:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Toolbar__sidebar-toggle:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Toolbar__sidebar-toggle svg {
  width: 16px;
  height: 16px;
}
.annotator-frame .Toolbar__sidebar-toggle:hover:not([disabled]), .annotator-frame .Toolbar__sidebar-toggle:focus:not([disabled]) {
  color: #202020;
}
@media (pointer: coarse) {
  .annotator-frame .Toolbar__sidebar-toggle {
    min-width: 44px;
    min-height: 44px;
  }
}
@media (pointer: coarse) {
  .annotator-frame .Toolbar__sidebar-toggle {
    min-width: 32px;
    min-height: 32px;
  }
}
.annotator-frame .Toolbar__sidebar-close {
  padding: 0;
  margin: 0;
  background-color: transparent;
  border-style: none;
  border: 1px solid #dbdbdb;
  border-right-width: 0;
  background: #fff;
  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.5);
  color: #737373;
  padding: 1px 6px;
  width: 27px;
  height: 27px;
  margin-top: 140px;
  margin-left: 6px;
}
.annotator-frame .Toolbar__sidebar-close:focus {
  outline: none;
  box-shadow: 0 0 0 2px #51a7e8;
}
.annotator-frame .Toolbar__sidebar-close:focus:not(.focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Toolbar__sidebar-close:focus:not(:focus-visible) {
  outline: none;
  box-shadow: none;
}
.annotator-frame .Toolbar__sidebar-close:hover:not([disabled]), .annotator-frame .Toolbar__sidebar-close:focus:not([disabled]) {
  color: #202020;
}

.WarningBanner {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  width: 100%;
  background-color: #fff;
  border-style: solid;
  border-width: 2px 0;
  font-size: 12px;
}
.WarningBanner--success {
  border-color: #00a36d;
}
.WarningBanner--error {
  border-color: #d93c3f;
}
.WarningBanner--notice {
  border-color: #fbc168;
}
.WarningBanner__type {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  padding: 0.75em 1em;
  color: white;
}
.WarningBanner--success .WarningBanner__type {
  background-color: #00a36d;
}
.WarningBanner--error .WarningBanner__type {
  background-color: #d93c3f;
}
.WarningBanner--notice .WarningBanner__type {
  background-color: #fbc168;
}
.WarningBanner__message {
  padding: 0.75em;
  width: 100%;
}

.hypothesis-svg-highlight {
  fill: transparent;
}

.hypothesis-highlights-always-on .hypothesis-svg-highlight {
  fill: rgba(255, 60, 60, 0.4);
}
.hypothesis-highlights-always-on .hypothesis-svg-highlight.is-opaque {
  fill: yellow;
}
.hypothesis-highlights-always-on .hypothesis-svg-highlight.is-focused {
  fill: rgba(156, 230, 255, 0.5);
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow {
  background-color: rgba(255, 255, 60, 0.4);
  cursor: pointer;
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow.is-transparent {
  background-color: transparent;
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow::before {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  clip: rect(0 0 0 0);
  overflow: hidden;
  content: " annotation start ";
  position: absolute;
  top: -40px;
  left: 0;
  height: 40px;
  width: 40px;
  border-bottom-left-radius: 50%;
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow::after {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  clip: rect(0 0 0 0);
  overflow: hidden;
  content: " annotation end ";
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow .hypothesis-highlight-yellow {
  background-color: rgba(206, 206, 60, 0.4);
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow .hypothesis-highlight-yellow.is-transparent {
  background-color: transparent;
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow .hypothesis-highlight-yellow .hypothesis-highlight-yellow {
  background-color: transparent;
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow.hypothesis-highlight-focused {
  background-color: rgba(156, 230, 255, 0.5) !important;
}
.hypothesis-highlights-always-on .hypothesis-highlight-yellow.hypothesis-highlight-focused .hypothesis-highlight-yellow {
  background-color: transparent !important;
}
.hypothesis-highlights-always-on .hypothesis-highlight-red {
  background-color: rgba(255, 60, 60, 0.4);
  cursor: pointer;
}
.hypothesis-highlights-always-on .hypothesis-highlight-red.is-transparent {
  background-color: transparent;
}
.hypothesis-highlights-always-on .hypothesis-highlight-red::before {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  clip: rect(0 0 0 0);
  overflow: hidden;
  content: " annotation start ";
}
.hypothesis-highlights-always-on .hypothesis-highlight-red::after {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  clip: rect(0 0 0 0);
  overflow: hidden;
  content: " annotation end ";
}
.hypothesis-highlights-always-on .hypothesis-highlight-red .hypothesis-highlight-red {
  background-color: rgba(206, 206, 60, 0.4);
}
.hypothesis-highlights-always-on .hypothesis-highlight-red .hypothesis-highlight-red.is-transparent {
  background-color: transparent;
}
.hypothesis-highlights-always-on .hypothesis-highlight-red .hypothesis-highlight-red .hypothesis-highlight-red {
  background-color: transparent;
}
.hypothesis-highlights-always-on .hypothesis-highlight-red.hypothesis-highlight-focused {
  background-color: rgba(156, 230, 255, 0.5) !important;
}
.hypothesis-highlights-always-on .hypothesis-highlight-red.hypothesis-highlight-focused .hypothesis-highlight-red {
  background-color: transparent !important;
}

.Notebook__outer {
  box-sizing: border-box;
  position: fixed;
  z-index: 2147483647;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 1em;
  background-color: rgba(0, 0, 0, 0.5);
}
.Notebook__outer.is-hidden {
  display: none;
}

.Notebook__inner {
  position: relative;
  box-sizing: border-box;
  border: 1px solid #dbdbdb;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1);
  border-radius: 2px;
  background-color: #fff;
  padding: 0;
  width: 100%;
  height: 100%;
  border: 0;
}

.Notebook__iframe {
  width: 100%;
  height: 100%;
  border: none;
}

.Notebook__close-button-container {
  position: absolute;
  right: 0;
  font-size: 14px;
  margin: 0.5em;
  cursor: pointer;
}

.annotator-frame {
  /*
    Consistency fixes
    adopted from http://necolas.github.com/normalize.css/
    */
  margin: 0;
  padding: 0;
  border: 0;
  position: fixed;
  top: 0;
  left: 100%;
  height: 100%;
  z-index: 2147483647;
  direction: ltr;
  font-size: 12px;
  line-height: 20px;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
}
.annotator-frame * {
  box-sizing: border-box;
}
.annotator-frame html {
  height: 100%;
  -ms-text-size-adjust: 100%;
      text-size-adjust: 100%;
}
.annotator-frame body {
  min-height: 100%;
  font-size: 100%;
  margin: 0;
}
.annotator-frame sub,
.annotator-frame sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}
.annotator-frame sup {
  top: -0.5em;
}
.annotator-frame sub {
  bottom: -0.25em;
}
.annotator-frame pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
}
.annotator-frame b,
.annotator-frame strong {
  font-weight: bold;
}
.annotator-frame abbr[title] {
  border-bottom: 1px dotted;
}
.annotator-frame a img,
.annotator-frame img {
  -ms-interpolation-mode: bicubic;
}
.annotator-frame input,
.annotator-frame textarea,
.annotator-frame button,
.annotator-frame select {
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
  line-height: normal;
  margin: 0;
}
.annotator-frame button,
.annotator-frame html input[type=button],
.annotator-frame input[type=reset],
.annotator-frame input[type=submit] {
  cursor: pointer;
  -webkit-appearance: button;
}
.annotator-frame textarea {
  overflow: auto;
}
.annotator-frame img::-moz-selection {
  background: transparent;
}
.annotator-frame img::selection,
.annotator-frame img::-moz-selection {
  background: transparent;
}
.annotator-frame ul,
.annotator-frame ol,
.annotator-frame dl,
.annotator-frame dd,
.annotator-frame dt,
.annotator-frame li {
  margin: 0;
  padding: 0;
  border: 0;
}
.annotator-frame ul,
.annotator-frame ol {
  list-style: none;
}
.annotator-frame blockquote {
  margin: 0;
}
.annotator-frame h1,
.annotator-frame h2,
.annotator-frame h3,
.annotator-frame h4,
.annotator-frame h5,
.annotator-frame h6 {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  font-weight: normal;
  font-style: normal;
  vertical-align: baseline;
}
.annotator-frame div,
.annotator-frame span,
.annotator-frame applet,
.annotator-frame object,
.annotator-frame iframe,
.annotator-frame h1,
.annotator-frame h2,
.annotator-frame h3,
.annotator-frame h4,
.annotator-frame h5,
.annotator-frame h6,
.annotator-frame p,
.annotator-frame blockquote,
.annotator-frame pre,
.annotator-frame a,
.annotator-frame abbr,
.annotator-frame acronym,
.annotator-frame address,
.annotator-frame big,
.annotator-frame cite,
.annotator-frame code,
.annotator-frame del,
.annotator-frame dfn,
.annotator-frame em,
.annotator-frame img,
.annotator-frame ins,
.annotator-frame kbd,
.annotator-frame q,
.annotator-frame s,
.annotator-frame samp,
.annotator-frame small,
.annotator-frame strike,
.annotator-frame strong,
.annotator-frame sub,
.annotator-frame sup,
.annotator-frame tt,
.annotator-frame var,
.annotator-frame b,
.annotator-frame u,
.annotator-frame i,
.annotator-frame center,
.annotator-frame dl,
.annotator-frame dt,
.annotator-frame dd,
.annotator-frame ol,
.annotator-frame ul,
.annotator-frame li,
.annotator-frame fieldset,
.annotator-frame form,
.annotator-frame label,
.annotator-frame legend,
.annotator-frame table,
.annotator-frame caption,
.annotator-frame tbody,
.annotator-frame tfoot,
.annotator-frame thead,
.annotator-frame tr,
.annotator-frame th,
.annotator-frame td,
.annotator-frame article,
.annotator-frame aside,
.annotator-frame canvas,
.annotator-frame details,
.annotator-frame embed,
.annotator-frame figure,
.annotator-frame figcaption,
.annotator-frame footer,
.annotator-frame header,
.annotator-frame hgroup,
.annotator-frame menu,
.annotator-frame nav,
.annotator-frame output,
.annotator-frame ruby,
.annotator-frame section,
.annotator-frame summary,
.annotator-frame time,
.annotator-frame mark,
.annotator-frame audio,
.annotator-frame video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
.annotator-frame * {
  background: none;
  font-size: 100%;
  text-indent: 0;
  height: initial;
  width: initial;
}
.annotator-frame.is-hidden {
  visibility: hidden;
  transition: visibility 150ms;
}
.annotator-frame.annotator-collapsed {
  margin-left: 0;
}
.annotator-frame.annotator-collapsed .h-sidebar-iframe {
  transition: visibility 150ms;
  visibility: hidden;
}
.annotator-frame .h-sidebar-iframe {
  border: none;
  height: 100%;
  width: 100%;
  z-index: 3;
  position: relative;
}

.annotator-placeholder {
  opacity: 0;
  position: absolute;
  top: 50%;
  z-index: -1;
}

.annotator-no-transition {
  transition: none !important;
}

/** Affordances for clean theme */
.annotator-frame--theme-clean {
  box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.5);
}

/*
  Mobile layout
  240-479 px
*/
@media screen and (min-width: 15em) {
  .annotator-frame {
    width: 90%;
    margin-left: -90%;
  }
}
/*
  Wide mobile layout
  480-599 px
*/
@media screen and (min-width: 30em) {
  .annotator-frame {
    width: 70%;
    margin-left: -70%;
  }
}
/*
  Tablet layout
  600-above px
*/
@media screen and (min-width: 37.5em) {
  .annotator-frame {
    transition: margin-left 150ms cubic-bezier(0.55, 0, 0.2, 0.8);
    width: 428px;
    margin-left: -428px;
  }
}
/*# sourceMappingURL=annotator.css.map */